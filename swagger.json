{
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "User login",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/ref-uang-keluar": {
      "post": {
        "operationId": "RefUangKeluarController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new reference uang keluar",
        "tags": [
          "ref-uang-keluar"
        ]
      },
      "get": {
        "operationId": "RefUangKeluarController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deskripsi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all reference uang keluar."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all reference uang keluar with pagination and filtering",
        "tags": [
          "ref-uang-keluar"
        ]
      }
    },
    "/api/ref-uang-keluar/{id}": {
      "get": {
        "operationId": "RefUangKeluarController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the reference uang keluar."
          },
          "404": {
            "description": "Reference uang keluar not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a reference uang keluar by id",
        "tags": [
          "ref-uang-keluar"
        ]
      },
      "patch": {
        "operationId": "RefUangKeluarController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The record has been successfully updated."
          },
          "404": {
            "description": "Reference uang keluar not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a reference uang keluar",
        "tags": [
          "ref-uang-keluar"
        ]
      },
      "delete": {
        "operationId": "RefUangKeluarController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record has been successfully deleted."
          },
          "404": {
            "description": "Reference uang keluar not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a reference uang keluar",
        "tags": [
          "ref-uang-keluar"
        ]
      }
    },
    "/api/ref-uang-masuk": {
      "post": {
        "operationId": "RefUangMasukController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new reference uang masuk",
        "tags": [
          "ref-uang-masuk"
        ]
      },
      "get": {
        "operationId": "RefUangMasukController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deskripsi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all reference uang masuk."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all reference uang masuk with pagination and filtering",
        "tags": [
          "ref-uang-masuk"
        ]
      }
    },
    "/api/ref-uang-masuk/{id}": {
      "get": {
        "operationId": "RefUangMasukController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the reference uang masuk."
          },
          "404": {
            "description": "Reference uang masuk not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a reference uang masuk by id",
        "tags": [
          "ref-uang-masuk"
        ]
      },
      "patch": {
        "operationId": "RefUangMasukController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The record has been successfully updated."
          },
          "404": {
            "description": "Reference uang masuk not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a reference uang masuk",
        "tags": [
          "ref-uang-masuk"
        ]
      },
      "delete": {
        "operationId": "RefUangMasukController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record has been successfully deleted."
          },
          "404": {
            "description": "Reference uang masuk not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a reference uang masuk",
        "tags": [
          "ref-uang-masuk"
        ]
      }
    },
    "/api/ref-siswa": {
      "post": {
        "operationId": "RefSiswaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefSiswaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new student record",
        "tags": [
          "ref-siswa"
        ]
      },
      "get": {
        "operationId": "RefSiswaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "nama",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nisn",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nis",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idMappingKelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all student records."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all student records with pagination and filtering",
        "tags": [
          "ref-siswa"
        ]
      }
    },
    "/api/ref-siswa/{id}": {
      "get": {
        "operationId": "RefSiswaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the student record."
          },
          "404": {
            "description": "Student record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a student record by id",
        "tags": [
          "ref-siswa"
        ]
      },
      "patch": {
        "operationId": "RefSiswaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefSiswaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The record has been successfully updated."
          },
          "404": {
            "description": "Student record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a student record",
        "tags": [
          "ref-siswa"
        ]
      },
      "delete": {
        "operationId": "RefSiswaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record has been successfully deleted."
          },
          "404": {
            "description": "Student record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a student record",
        "tags": [
          "ref-siswa"
        ]
      }
    },
    "/api/trans-siswa": {
      "post": {
        "operationId": "TransSiswaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransSiswaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new student transaction",
        "tags": [
          "trans-siswa"
        ]
      },
      "get": {
        "operationId": "TransSiswaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "noFaktur",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jenisPembayaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalPembayaranStart",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "tanggalPembayaranEnd",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stsPpdb",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all student transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all student transactions with pagination and filtering",
        "tags": [
          "trans-siswa"
        ]
      }
    },
    "/api/trans-siswa/{id}": {
      "get": {
        "operationId": "TransSiswaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the student transaction."
          },
          "404": {
            "description": "Student transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a student transaction by id",
        "tags": [
          "trans-siswa"
        ]
      },
      "patch": {
        "operationId": "TransSiswaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransSiswaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The transaction has been successfully updated."
          },
          "404": {
            "description": "Student transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a student transaction",
        "tags": [
          "trans-siswa"
        ]
      },
      "delete": {
        "operationId": "TransSiswaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction has been successfully deleted."
          },
          "404": {
            "description": "Student transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a student transaction",
        "tags": [
          "trans-siswa"
        ]
      }
    },
    "/api/ref-spp": {
      "post": {
        "operationId": "RefSppController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefSppDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new SPP reference",
        "tags": [
          "ref-spp"
        ]
      },
      "get": {
        "operationId": "RefSppController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "refName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "besarnya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SPP references."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SPP references with pagination and filtering",
        "tags": [
          "ref-spp"
        ]
      }
    },
    "/api/ref-spp/{id}": {
      "get": {
        "operationId": "RefSppController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP reference."
          },
          "404": {
            "description": "SPP reference not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a SPP reference by id",
        "tags": [
          "ref-spp"
        ]
      },
      "patch": {
        "operationId": "RefSppController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefSppDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The record has been successfully updated."
          },
          "404": {
            "description": "SPP reference not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a SPP reference",
        "tags": [
          "ref-spp"
        ]
      },
      "delete": {
        "operationId": "RefSppController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record has been successfully deleted."
          },
          "404": {
            "description": "SPP reference not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a SPP reference",
        "tags": [
          "ref-spp"
        ]
      }
    },
    "/api/trans-spp": {
      "post": {
        "operationId": "TransSppController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransSppDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new SPP transaction",
        "tags": [
          "trans-spp"
        ]
      },
      "get": {
        "operationId": "TransSppController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "nis",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksiStart",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksiEnd",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "bulan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noFaktur",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stsPpdb",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SPP transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SPP transactions with pagination and filtering",
        "tags": [
          "trans-spp"
        ]
      }
    },
    "/api/trans-spp/{id}": {
      "get": {
        "operationId": "TransSppController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP transaction."
          },
          "404": {
            "description": "SPP transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a SPP transaction by id",
        "tags": [
          "trans-spp"
        ]
      },
      "patch": {
        "operationId": "TransSppController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransSppDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The transaction has been successfully updated."
          },
          "404": {
            "description": "SPP transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a SPP transaction",
        "tags": [
          "trans-spp"
        ]
      },
      "delete": {
        "operationId": "TransSppController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction has been successfully deleted."
          },
          "404": {
            "description": "SPP transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a SPP transaction",
        "tags": [
          "trans-spp"
        ]
      }
    },
    "/api/trans-uang-masuk": {
      "post": {
        "operationId": "TransUangMasukController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new income transaction",
        "tags": [
          "trans-uang-masuk"
        ]
      },
      "get": {
        "operationId": "TransUangMasukController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kodesub",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggaltransaksiStart",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "tanggaltransaksiEnd",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "diserahkan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diterima",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tahunajaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "no",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all income transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all income transactions with pagination and filtering",
        "tags": [
          "trans-uang-masuk"
        ]
      }
    },
    "/api/trans-uang-masuk/{id}": {
      "get": {
        "operationId": "TransUangMasukController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the income transaction."
          },
          "404": {
            "description": "Income transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get an income transaction by id",
        "tags": [
          "trans-uang-masuk"
        ]
      },
      "patch": {
        "operationId": "TransUangMasukController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The transaction has been successfully updated."
          },
          "404": {
            "description": "Income transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update an income transaction",
        "tags": [
          "trans-uang-masuk"
        ]
      },
      "delete": {
        "operationId": "TransUangMasukController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction has been successfully deleted."
          },
          "404": {
            "description": "Income transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete an income transaction",
        "tags": [
          "trans-uang-masuk"
        ]
      }
    },
    "/api/trans-uang-keluar": {
      "post": {
        "operationId": "TransUangKeluarController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new expense transaction",
        "tags": [
          "trans-uang-keluar"
        ]
      },
      "get": {
        "operationId": "TransUangKeluarController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kodesub",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggaltransaksiStart",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "tanggaltransaksiEnd",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "diserahkan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diterima",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tahunajaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "no",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all expense transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all expense transactions with pagination and filtering",
        "tags": [
          "trans-uang-keluar"
        ]
      }
    },
    "/api/trans-uang-keluar/{id}": {
      "get": {
        "operationId": "TransUangKeluarController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the expense transaction."
          },
          "404": {
            "description": "Expense transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get an expense transaction by id",
        "tags": [
          "trans-uang-keluar"
        ]
      },
      "patch": {
        "operationId": "TransUangKeluarController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The transaction has been successfully updated."
          },
          "404": {
            "description": "Expense transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update an expense transaction",
        "tags": [
          "trans-uang-keluar"
        ]
      },
      "delete": {
        "operationId": "TransUangKeluarController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction has been successfully deleted."
          },
          "404": {
            "description": "Expense transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete an expense transaction",
        "tags": [
          "trans-uang-keluar"
        ]
      }
    },
    "/api/adm-role": {
      "post": {
        "operationId": "AdmRoleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdmRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The role has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new role",
        "tags": [
          "adm-role"
        ]
      },
      "get": {
        "operationId": "AdmRoleController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "roleName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all roles."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all roles with pagination and filtering",
        "tags": [
          "adm-role"
        ]
      }
    },
    "/api/adm-role/{id}": {
      "get": {
        "operationId": "AdmRoleController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the role."
          },
          "404": {
            "description": "Role not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a role by id",
        "tags": [
          "adm-role"
        ]
      },
      "patch": {
        "operationId": "AdmRoleController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdmRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role has been successfully updated."
          },
          "404": {
            "description": "Role not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a role",
        "tags": [
          "adm-role"
        ]
      },
      "delete": {
        "operationId": "AdmRoleController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The role has been successfully deleted."
          },
          "404": {
            "description": "Role not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a role",
        "tags": [
          "adm-role"
        ]
      }
    },
    "/api/adm-role-assignment": {
      "post": {
        "operationId": "AdmRoleAssignmentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdmRoleAssignmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The role has been successfully assigned to the user."
          },
          "409": {
            "description": "This role is already assigned to the user."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Assign a role to a user",
        "tags": [
          "adm-role-assignment"
        ]
      },
      "get": {
        "operationId": "AdmRoleAssignmentController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "roleId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all role assignments."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all role assignments with pagination and filtering",
        "tags": [
          "adm-role-assignment"
        ]
      }
    },
    "/api/adm-role-assignment/{id}": {
      "get": {
        "operationId": "AdmRoleAssignmentController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the role assignment."
          },
          "404": {
            "description": "Role assignment not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a role assignment by id",
        "tags": [
          "adm-role-assignment"
        ]
      },
      "patch": {
        "operationId": "AdmRoleAssignmentController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdmRoleAssignmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role assignment has been successfully updated."
          },
          "404": {
            "description": "Role assignment not found."
          },
          "409": {
            "description": "This role is already assigned to the user."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a role assignment",
        "tags": [
          "adm-role-assignment"
        ]
      },
      "delete": {
        "operationId": "AdmRoleAssignmentController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The role assignment has been successfully deleted."
          },
          "404": {
            "description": "Role assignment not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a role assignment",
        "tags": [
          "adm-role-assignment"
        ]
      }
    },
    "/api/adm-role-assignment/user/{userId}": {
      "get": {
        "operationId": "AdmRoleAssignmentController_findByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all role assignments for the user."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all role assignments for a user",
        "tags": [
          "adm-role-assignment"
        ]
      }
    },
    "/api/adm-config": {
      "post": {
        "operationId": "AdmConfigController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdmConfigDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The configuration has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new configuration",
        "tags": [
          "adm-config"
        ]
      },
      "get": {
        "operationId": "AdmConfigController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all configurations."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all configurations with pagination and filtering",
        "tags": [
          "adm-config"
        ]
      }
    },
    "/api/adm-config/{id}": {
      "get": {
        "operationId": "AdmConfigController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the configuration."
          },
          "404": {
            "description": "Configuration not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a configuration by id",
        "tags": [
          "adm-config"
        ]
      },
      "patch": {
        "operationId": "AdmConfigController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdmConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The configuration has been successfully updated."
          },
          "404": {
            "description": "Configuration not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a configuration",
        "tags": [
          "adm-config"
        ]
      },
      "delete": {
        "operationId": "AdmConfigController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The configuration has been successfully deleted."
          },
          "404": {
            "description": "Configuration not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a configuration",
        "tags": [
          "adm-config"
        ]
      }
    },
    "/api/adm-config/name/{name}": {
      "get": {
        "operationId": "AdmConfigController_findByName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the configuration."
          },
          "404": {
            "description": "Configuration not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a configuration by name",
        "tags": [
          "adm-config"
        ]
      }
    },
    "/api/adm-menu": {
      "post": {
        "operationId": "AdmMenuController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdmMenuDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The menu has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new menu",
        "tags": [
          "adm-menu"
        ]
      },
      "get": {
        "operationId": "AdmMenuController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "parentId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all menus."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all menus with pagination and filtering",
        "tags": [
          "adm-menu"
        ]
      }
    },
    "/api/adm-menu/tree": {
      "get": {
        "operationId": "AdmMenuController_getMenuTree",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return the menu tree."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get the menu tree structure",
        "tags": [
          "adm-menu"
        ]
      }
    },
    "/api/adm-menu/parent/{parentId}": {
      "get": {
        "operationId": "AdmMenuController_findByParentId",
        "parameters": [
          {
            "name": "parentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all menus with the specified parent ID."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all menus by parent ID",
        "tags": [
          "adm-menu"
        ]
      }
    },
    "/api/adm-menu/{id}": {
      "get": {
        "operationId": "AdmMenuController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the menu."
          },
          "404": {
            "description": "Menu not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a menu by id",
        "tags": [
          "adm-menu"
        ]
      },
      "patch": {
        "operationId": "AdmMenuController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdmMenuDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The menu has been successfully updated."
          },
          "404": {
            "description": "Menu not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a menu",
        "tags": [
          "adm-menu"
        ]
      },
      "delete": {
        "operationId": "AdmMenuController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The menu has been successfully deleted."
          },
          "404": {
            "description": "Menu not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a menu",
        "tags": [
          "adm-menu"
        ]
      }
    },
    "/api/adm-tahun-ajaran": {
      "post": {
        "operationId": "AdmTahunAjaranController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdmTahunAjaranDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The tahun ajaran has been successfully created."
          },
          "409": {
            "description": "Date range overlaps with existing tahun ajaran."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new tahun ajaran",
        "tags": [
          "adm-tahun-ajaran"
        ]
      },
      "get": {
        "operationId": "AdmTahunAjaranController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all tahun ajaran."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all tahun ajaran with pagination and filtering",
        "tags": [
          "adm-tahun-ajaran"
        ]
      }
    },
    "/api/adm-tahun-ajaran/active": {
      "get": {
        "operationId": "AdmTahunAjaranController_findActive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return the active tahun ajaran."
          },
          "404": {
            "description": "No active tahun ajaran found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get the active tahun ajaran",
        "tags": [
          "adm-tahun-ajaran"
        ]
      }
    },
    "/api/adm-tahun-ajaran/{id}": {
      "get": {
        "operationId": "AdmTahunAjaranController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the tahun ajaran."
          },
          "404": {
            "description": "Tahun ajaran not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a tahun ajaran by id",
        "tags": [
          "adm-tahun-ajaran"
        ]
      },
      "patch": {
        "operationId": "AdmTahunAjaranController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdmTahunAjaranDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tahun ajaran has been successfully updated."
          },
          "404": {
            "description": "Tahun ajaran not found."
          },
          "409": {
            "description": "Date range overlaps with existing tahun ajaran."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a tahun ajaran",
        "tags": [
          "adm-tahun-ajaran"
        ]
      },
      "delete": {
        "operationId": "AdmTahunAjaranController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tahun ajaran has been successfully deleted."
          },
          "404": {
            "description": "Tahun ajaran not found."
          },
          "409": {
            "description": "Cannot delete the active tahun ajaran."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a tahun ajaran",
        "tags": [
          "adm-tahun-ajaran"
        ]
      }
    },
    "/api/adm-tahun-ajaran/{id}/set-active": {
      "patch": {
        "operationId": "AdmTahunAjaranController_setActive",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tahun ajaran has been successfully set as active."
          },
          "404": {
            "description": "Tahun ajaran not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Set a tahun ajaran as active",
        "tags": [
          "adm-tahun-ajaran"
        ]
      }
    },
    "/api/adm-user": {
      "post": {
        "operationId": "AdmUserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdmUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully created."
          },
          "409": {
            "description": "Username already exists."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new user",
        "tags": [
          "adm-user"
        ]
      },
      "get": {
        "operationId": "AdmUserController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alias",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userStatus",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idKaryawan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all users."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all users with pagination and filtering",
        "tags": [
          "adm-user"
        ]
      }
    },
    "/api/adm-user/{id}": {
      "get": {
        "operationId": "AdmUserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the user."
          },
          "404": {
            "description": "User not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a user by id",
        "tags": [
          "adm-user"
        ]
      },
      "patch": {
        "operationId": "AdmUserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdmUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user has been successfully updated."
          },
          "404": {
            "description": "User not found."
          },
          "409": {
            "description": "Username already exists."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a user",
        "tags": [
          "adm-user"
        ]
      },
      "delete": {
        "operationId": "AdmUserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has been successfully deleted."
          },
          "404": {
            "description": "User not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a user",
        "tags": [
          "adm-user"
        ]
      }
    },
    "/api/adm-user/username/{username}": {
      "get": {
        "operationId": "AdmUserController_findByUsername",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the user."
          },
          "404": {
            "description": "User not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a user by username",
        "tags": [
          "adm-user"
        ]
      }
    },
    "/api/change-pass": {
      "post": {
        "operationId": "ChangePassController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully changed."
          },
          "400": {
            "description": "New password and confirm password do not match."
          },
          "401": {
            "description": "Current password is incorrect."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Change user password",
        "tags": [
          "change-pass"
        ]
      }
    },
    "/api/ref-biaya": {
      "post": {
        "operationId": "RefBiayaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefBiayaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The biaya has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new biaya",
        "tags": [
          "ref-biaya"
        ]
      },
      "get": {
        "operationId": "RefBiayaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all biaya."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all biaya with pagination and filtering",
        "tags": [
          "ref-biaya"
        ]
      }
    },
    "/api/ref-biaya/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "RefBiayaController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all biaya for the specified tahun ajaran."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all biaya for a specific tahun ajaran",
        "tags": [
          "ref-biaya"
        ]
      }
    },
    "/api/ref-biaya/{id}": {
      "get": {
        "operationId": "RefBiayaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the biaya."
          },
          "404": {
            "description": "Biaya not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a biaya by id",
        "tags": [
          "ref-biaya"
        ]
      },
      "patch": {
        "operationId": "RefBiayaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefBiayaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The biaya has been successfully updated."
          },
          "404": {
            "description": "Biaya not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a biaya",
        "tags": [
          "ref-biaya"
        ]
      },
      "delete": {
        "operationId": "RefBiayaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The biaya has been successfully deleted."
          },
          "404": {
            "description": "Biaya not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a biaya",
        "tags": [
          "ref-biaya"
        ]
      }
    },
    "/api/ref-cicilan": {
      "post": {
        "operationId": "RefCicilanController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefCicilanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The cicilan has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new cicilan",
        "tags": [
          "ref-cicilan"
        ]
      },
      "get": {
        "operationId": "RefCicilanController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cicilan."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cicilan with pagination and filtering",
        "tags": [
          "ref-cicilan"
        ]
      }
    },
    "/api/ref-cicilan/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "RefCicilanController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cicilan for the specified tahun ajaran."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cicilan for a specific tahun ajaran",
        "tags": [
          "ref-cicilan"
        ]
      }
    },
    "/api/ref-cicilan/biaya/{idBiaya}": {
      "get": {
        "operationId": "RefCicilanController_findByBiaya",
        "parameters": [
          {
            "name": "idBiaya",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cicilan for the specified biaya."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cicilan for a specific biaya",
        "tags": [
          "ref-cicilan"
        ]
      }
    },
    "/api/ref-cicilan/{id}": {
      "get": {
        "operationId": "RefCicilanController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the cicilan."
          },
          "404": {
            "description": "Cicilan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a cicilan by id",
        "tags": [
          "ref-cicilan"
        ]
      },
      "patch": {
        "operationId": "RefCicilanController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefCicilanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The cicilan has been successfully updated."
          },
          "404": {
            "description": "Cicilan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a cicilan",
        "tags": [
          "ref-cicilan"
        ]
      },
      "delete": {
        "operationId": "RefCicilanController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The cicilan has been successfully deleted."
          },
          "404": {
            "description": "Cicilan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a cicilan",
        "tags": [
          "ref-cicilan"
        ]
      }
    },
    "/api/ref-jabatan": {
      "post": {
        "operationId": "RefJabatanController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefJabatanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The jabatan has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new jabatan",
        "tags": [
          "ref-jabatan"
        ]
      },
      "get": {
        "operationId": "RefJabatanController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "jabatan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keterangan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all jabatan."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all jabatan with pagination and filtering",
        "tags": [
          "ref-jabatan"
        ]
      }
    },
    "/api/ref-jabatan/{id}": {
      "get": {
        "operationId": "RefJabatanController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the jabatan."
          },
          "404": {
            "description": "Jabatan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a jabatan by id",
        "tags": [
          "ref-jabatan"
        ]
      },
      "patch": {
        "operationId": "RefJabatanController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefJabatanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The jabatan has been successfully updated."
          },
          "404": {
            "description": "Jabatan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a jabatan",
        "tags": [
          "ref-jabatan"
        ]
      },
      "delete": {
        "operationId": "RefJabatanController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The jabatan has been successfully deleted."
          },
          "404": {
            "description": "Jabatan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a jabatan",
        "tags": [
          "ref-jabatan"
        ]
      }
    },
    "/api/ref-karyawan": {
      "post": {
        "operationId": "RefKaryawanController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefKaryawanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The karyawan has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new karyawan",
        "tags": [
          "ref-karyawan"
        ]
      },
      "get": {
        "operationId": "RefKaryawanController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "jabatan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nik",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namaKaryawan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alamat",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "telepon",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all karyawan."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all karyawan with pagination and filtering",
        "tags": [
          "ref-karyawan"
        ]
      }
    },
    "/api/ref-karyawan/jabatan/{jabatan}": {
      "get": {
        "operationId": "RefKaryawanController_findByJabatan",
        "parameters": [
          {
            "name": "jabatan",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all karyawan for the specified jabatan."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all karyawan for a specific jabatan",
        "tags": [
          "ref-karyawan"
        ]
      }
    },
    "/api/ref-karyawan/{id}": {
      "get": {
        "operationId": "RefKaryawanController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the karyawan."
          },
          "404": {
            "description": "Karyawan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a karyawan by id",
        "tags": [
          "ref-karyawan"
        ]
      },
      "patch": {
        "operationId": "RefKaryawanController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefKaryawanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The karyawan has been successfully updated."
          },
          "404": {
            "description": "Karyawan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a karyawan",
        "tags": [
          "ref-karyawan"
        ]
      },
      "delete": {
        "operationId": "RefKaryawanController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The karyawan has been successfully deleted."
          },
          "404": {
            "description": "Karyawan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a karyawan",
        "tags": [
          "ref-karyawan"
        ]
      }
    },
    "/api/ref-list-uang-keluar": {
      "post": {
        "operationId": "RefListUangKeluarController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefListUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The list uang keluar has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new list uang keluar",
        "tags": [
          "ref-list-uang-keluar"
        ]
      },
      "get": {
        "operationId": "RefListUangKeluarController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kodesub",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daftarlist",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keterangan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all list uang keluar."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all list uang keluar with pagination and filtering",
        "tags": [
          "ref-list-uang-keluar"
        ]
      }
    },
    "/api/ref-list-uang-keluar/{id}": {
      "get": {
        "operationId": "RefListUangKeluarController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list uang keluar."
          },
          "404": {
            "description": "List uang keluar not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a list uang keluar by id",
        "tags": [
          "ref-list-uang-keluar"
        ]
      },
      "patch": {
        "operationId": "RefListUangKeluarController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefListUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The list uang keluar has been successfully updated."
          },
          "404": {
            "description": "List uang keluar not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a list uang keluar",
        "tags": [
          "ref-list-uang-keluar"
        ]
      },
      "delete": {
        "operationId": "RefListUangKeluarController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list uang keluar has been successfully deleted."
          },
          "404": {
            "description": "List uang keluar not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a list uang keluar",
        "tags": [
          "ref-list-uang-keluar"
        ]
      }
    },
    "/api/ref-list-uang-masuk": {
      "post": {
        "operationId": "RefListUangMasukController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefListUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The list uang masuk has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new list uang masuk",
        "tags": [
          "ref-list-uang-masuk"
        ]
      },
      "get": {
        "operationId": "RefListUangMasukController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kodedesk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kodesub",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "daftarlist",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keterangan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all list uang masuk."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all list uang masuk with pagination and filtering",
        "tags": [
          "ref-list-uang-masuk"
        ]
      }
    },
    "/api/ref-list-uang-masuk/{id}": {
      "get": {
        "operationId": "RefListUangMasukController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list uang masuk."
          },
          "404": {
            "description": "List uang masuk not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a list uang masuk by id",
        "tags": [
          "ref-list-uang-masuk"
        ]
      },
      "patch": {
        "operationId": "RefListUangMasukController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefListUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The list uang masuk has been successfully updated."
          },
          "404": {
            "description": "List uang masuk not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a list uang masuk",
        "tags": [
          "ref-list-uang-masuk"
        ]
      },
      "delete": {
        "operationId": "RefListUangMasukController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list uang masuk has been successfully deleted."
          },
          "404": {
            "description": "List uang masuk not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a list uang masuk",
        "tags": [
          "ref-list-uang-masuk"
        ]
      }
    },
    "/api/ref-privilage": {
      "post": {
        "operationId": "RefPrivilageController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefPrivilageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The privilege has been successfully created."
          },
          "409": {
            "description": "This privilege already exists."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new privilege",
        "tags": [
          "ref-privilage"
        ]
      },
      "get": {
        "operationId": "RefPrivilageController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idRole",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idMenu",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "canRead",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "canCreate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "canUpdate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "canDelete",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all privileges."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all privileges with pagination and filtering",
        "tags": [
          "ref-privilage"
        ]
      }
    },
    "/api/ref-privilage/role/{idRole}": {
      "get": {
        "operationId": "RefPrivilageController_findByRole",
        "parameters": [
          {
            "name": "idRole",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all privileges for the specified role."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all privileges for a specific role",
        "tags": [
          "ref-privilage"
        ]
      }
    },
    "/api/ref-privilage/menu/{idMenu}": {
      "get": {
        "operationId": "RefPrivilageController_findByMenu",
        "parameters": [
          {
            "name": "idMenu",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all privileges for the specified menu."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all privileges for a specific menu",
        "tags": [
          "ref-privilage"
        ]
      }
    },
    "/api/ref-privilage/{id}": {
      "get": {
        "operationId": "RefPrivilageController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the privilege."
          },
          "404": {
            "description": "Privilege not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a privilege by id",
        "tags": [
          "ref-privilage"
        ]
      },
      "patch": {
        "operationId": "RefPrivilageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefPrivilageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The privilege has been successfully updated."
          },
          "404": {
            "description": "Privilege not found."
          },
          "409": {
            "description": "This privilege already exists."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a privilege",
        "tags": [
          "ref-privilage"
        ]
      },
      "delete": {
        "operationId": "RefPrivilageController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The privilege has been successfully deleted."
          },
          "404": {
            "description": "Privilege not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a privilege",
        "tags": [
          "ref-privilage"
        ]
      }
    },
    "/api/ref-siswa-komp-biaya": {
      "post": {
        "operationId": "RefSiswaKompBiayaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefSiswaKompBiayaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The student fee component has been successfully created."
          },
          "409": {
            "description": "This fee component already exists for this student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new student fee component",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      },
      "get": {
        "operationId": "RefSiswaKompBiayaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all student fee components."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all student fee components with pagination and filtering",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      }
    },
    "/api/ref-siswa-komp-biaya/siswa/{idSiswa}": {
      "get": {
        "operationId": "RefSiswaKompBiayaController_findBySiswa",
        "parameters": [
          {
            "name": "idSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all fee components for the specified student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all fee components for a specific student",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      }
    },
    "/api/ref-siswa-komp-biaya/biaya/{idBiaya}": {
      "get": {
        "operationId": "RefSiswaKompBiayaController_findByBiaya",
        "parameters": [
          {
            "name": "idBiaya",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all students with the specified fee component."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all students with a specific fee component",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      }
    },
    "/api/ref-siswa-komp-biaya/{id}": {
      "get": {
        "operationId": "RefSiswaKompBiayaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the student fee component."
          },
          "404": {
            "description": "Student fee component not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a student fee component by id",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      },
      "patch": {
        "operationId": "RefSiswaKompBiayaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefSiswaKompBiayaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The student fee component has been successfully updated."
          },
          "404": {
            "description": "Student fee component not found."
          },
          "409": {
            "description": "This fee component already exists for this student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a student fee component",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      },
      "delete": {
        "operationId": "RefSiswaKompBiayaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The student fee component has been successfully deleted."
          },
          "404": {
            "description": "Student fee component not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a student fee component",
        "tags": [
          "ref-siswa-komp-biaya"
        ]
      }
    },
    "/api/ref-spp-type": {
      "post": {
        "operationId": "RefSppTypeController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefSppTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The SPP type has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRefSppTypeDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new SPP type",
        "tags": [
          "ref-spp-type"
        ]
      },
      "get": {
        "operationId": "RefSppTypeController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "refName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeDis",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SPP types."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SPP types with pagination and filtering",
        "tags": [
          "ref-spp-type"
        ]
      }
    },
    "/api/ref-spp-type/{id}": {
      "get": {
        "operationId": "RefSppTypeController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP type."
          },
          "404": {
            "description": "SPP type not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a SPP type by id",
        "tags": [
          "ref-spp-type"
        ]
      },
      "patch": {
        "operationId": "RefSppTypeController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefSppTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The SPP type has been successfully updated."
          },
          "404": {
            "description": "SPP type not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a SPP type",
        "tags": [
          "ref-spp-type"
        ]
      },
      "delete": {
        "operationId": "RefSppTypeController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The SPP type has been successfully deleted."
          },
          "404": {
            "description": "SPP type not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a SPP type",
        "tags": [
          "ref-spp-type"
        ]
      }
    },
    "/api/ref-tabsis": {
      "post": {
        "operationId": "RefTabsisController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefTabsisDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The student savings record has been successfully created."
          },
          "409": {
            "description": "This student already has a savings record for this academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new student savings record",
        "tags": [
          "ref-tabsis"
        ]
      },
      "get": {
        "operationId": "RefTabsisController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all student savings records."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all student savings records with pagination and filtering",
        "tags": [
          "ref-tabsis"
        ]
      }
    },
    "/api/ref-tabsis/siswa/{idSiswa}": {
      "get": {
        "operationId": "RefTabsisController_findBySiswa",
        "parameters": [
          {
            "name": "idSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all savings records for the specified student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all savings records for a specific student",
        "tags": [
          "ref-tabsis"
        ]
      }
    },
    "/api/ref-tabsis/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "RefTabsisController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all savings records for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all savings records for a specific academic year",
        "tags": [
          "ref-tabsis"
        ]
      }
    },
    "/api/ref-tabsis/{id}": {
      "get": {
        "operationId": "RefTabsisController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the student savings record."
          },
          "404": {
            "description": "Student savings record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a student savings record by id",
        "tags": [
          "ref-tabsis"
        ]
      },
      "patch": {
        "operationId": "RefTabsisController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefTabsisDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The student savings record has been successfully updated."
          },
          "404": {
            "description": "Student savings record not found."
          },
          "409": {
            "description": "This student already has a savings record for this academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a student savings record",
        "tags": [
          "ref-tabsis"
        ]
      },
      "delete": {
        "operationId": "RefTabsisController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The student savings record has been successfully deleted."
          },
          "404": {
            "description": "Student savings record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a student savings record",
        "tags": [
          "ref-tabsis"
        ]
      }
    },
    "/api/trans-pengembalian-dsp": {
      "post": {
        "operationId": "TransPengembalianDspController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransPengembalianDspDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The DSP refund transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new DSP refund transaction",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      },
      "get": {
        "operationId": "TransPengembalianDspController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all DSP refund transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all DSP refund transactions with pagination and filtering",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      }
    },
    "/api/trans-pengembalian-dsp/generate-transaction-number": {
      "get": {
        "operationId": "TransPengembalianDspController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      }
    },
    "/api/trans-pengembalian-dsp/siswa/{idSiswa}": {
      "get": {
        "operationId": "TransPengembalianDspController_findBySiswa",
        "parameters": [
          {
            "name": "idSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all DSP refund transactions for the specified student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all DSP refund transactions for a specific student",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      }
    },
    "/api/trans-pengembalian-dsp/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "TransPengembalianDspController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all DSP refund transactions for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all DSP refund transactions for a specific academic year",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      }
    },
    "/api/trans-pengembalian-dsp/{id}": {
      "get": {
        "operationId": "TransPengembalianDspController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the DSP refund transaction."
          },
          "404": {
            "description": "DSP refund transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a DSP refund transaction by id",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      },
      "patch": {
        "operationId": "TransPengembalianDspController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransPengembalianDspDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The DSP refund transaction has been successfully updated."
          },
          "404": {
            "description": "DSP refund transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a DSP refund transaction",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      },
      "delete": {
        "operationId": "TransPengembalianDspController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The DSP refund transaction has been successfully deleted."
          },
          "404": {
            "description": "DSP refund transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a DSP refund transaction",
        "tags": [
          "trans-pengembalian-dsp"
        ]
      }
    },
    "/api/ppdb-siswa": {
      "post": {
        "operationId": "PpdbSiswaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePpdbSiswaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The PPDB student has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new PPDB student",
        "tags": [
          "ppdb-siswa"
        ]
      },
      "get": {
        "operationId": "PpdbSiswaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nisn",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB students."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB students with pagination and filtering",
        "tags": [
          "ppdb-siswa"
        ]
      }
    },
    "/api/ppdb-siswa/tahun-ajaran/{tahunAjaran}": {
      "get": {
        "operationId": "PpdbSiswaController_findByTahunAjaran",
        "parameters": [
          {
            "name": "tahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB students for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB students for a specific academic year",
        "tags": [
          "ppdb-siswa"
        ]
      }
    },
    "/api/ppdb-siswa/{id}": {
      "get": {
        "operationId": "PpdbSiswaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PPDB student."
          },
          "404": {
            "description": "PPDB student not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a PPDB student by id",
        "tags": [
          "ppdb-siswa"
        ]
      },
      "patch": {
        "operationId": "PpdbSiswaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePpdbSiswaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The PPDB student has been successfully updated."
          },
          "404": {
            "description": "PPDB student not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a PPDB student",
        "tags": [
          "ppdb-siswa"
        ]
      },
      "delete": {
        "operationId": "PpdbSiswaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PPDB student has been successfully deleted."
          },
          "404": {
            "description": "PPDB student not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a PPDB student",
        "tags": [
          "ppdb-siswa"
        ]
      }
    },
    "/api/ppdb-komponen-biaya": {
      "post": {
        "operationId": "PpdbKomponenBiayaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePpdbKomponenBiayaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The PPDB fee component has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new PPDB fee component",
        "tags": [
          "ppdb-komponen-biaya"
        ]
      },
      "get": {
        "operationId": "PpdbKomponenBiayaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB fee components."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB fee components with pagination and filtering",
        "tags": [
          "ppdb-komponen-biaya"
        ]
      }
    },
    "/api/ppdb-komponen-biaya/tahun-ajaran-ppd/{idTahunAjaranPpd}": {
      "get": {
        "operationId": "PpdbKomponenBiayaController_findByTahunAjaranPpd",
        "parameters": [
          {
            "name": "idTahunAjaranPpd",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all active PPDB fee components for the specified PPDB academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all active PPDB fee components for a specific PPDB academic year",
        "tags": [
          "ppdb-komponen-biaya"
        ]
      }
    },
    "/api/ppdb-komponen-biaya/{id}": {
      "get": {
        "operationId": "PpdbKomponenBiayaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PPDB fee component."
          },
          "404": {
            "description": "PPDB fee component not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a PPDB fee component by id",
        "tags": [
          "ppdb-komponen-biaya"
        ]
      },
      "patch": {
        "operationId": "PpdbKomponenBiayaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePpdbKomponenBiayaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The PPDB fee component has been successfully updated."
          },
          "404": {
            "description": "PPDB fee component not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a PPDB fee component",
        "tags": [
          "ppdb-komponen-biaya"
        ]
      },
      "delete": {
        "operationId": "PpdbKomponenBiayaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PPDB fee component has been successfully deleted."
          },
          "404": {
            "description": "PPDB fee component not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a PPDB fee component",
        "tags": [
          "ppdb-komponen-biaya"
        ]
      }
    },
    "/api/ppdb-keuangan": {
      "post": {
        "operationId": "PpdbKeuanganController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePpdbKeuanganDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The PPDB finance record has been successfully created."
          },
          "409": {
            "description": "This fee component already exists for this student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new PPDB finance record",
        "tags": [
          "ppdb-keuangan"
        ]
      },
      "get": {
        "operationId": "PpdbKeuanganController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idPpdbSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idPpdbKomponenBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB finance records."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB finance records with pagination and filtering",
        "tags": [
          "ppdb-keuangan"
        ]
      }
    },
    "/api/ppdb-keuangan/ppdb-siswa/{idPpdbSiswa}": {
      "get": {
        "operationId": "PpdbKeuanganController_findByPpdbSiswa",
        "parameters": [
          {
            "name": "idPpdbSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB finance records for the specified PPDB student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB finance records for a specific PPDB student",
        "tags": [
          "ppdb-keuangan"
        ]
      }
    },
    "/api/ppdb-keuangan/ppdb-komponen-biaya/{idPpdbKomponenBiaya}": {
      "get": {
        "operationId": "PpdbKeuanganController_findByPpdbKomponenBiaya",
        "parameters": [
          {
            "name": "idPpdbKomponenBiaya",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB finance records for the specified PPDB fee component."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB finance records for a specific PPDB fee component",
        "tags": [
          "ppdb-keuangan"
        ]
      }
    },
    "/api/ppdb-keuangan/{id}": {
      "get": {
        "operationId": "PpdbKeuanganController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PPDB finance record."
          },
          "404": {
            "description": "PPDB finance record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a PPDB finance record by id",
        "tags": [
          "ppdb-keuangan"
        ]
      },
      "patch": {
        "operationId": "PpdbKeuanganController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePpdbKeuanganDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The PPDB finance record has been successfully updated."
          },
          "404": {
            "description": "PPDB finance record not found."
          },
          "409": {
            "description": "This fee component already exists for this student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a PPDB finance record",
        "tags": [
          "ppdb-keuangan"
        ]
      },
      "delete": {
        "operationId": "PpdbKeuanganController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PPDB finance record has been successfully deleted."
          },
          "404": {
            "description": "PPDB finance record not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a PPDB finance record",
        "tags": [
          "ppdb-keuangan"
        ]
      }
    },
    "/api/trans-siswa-ppdb": {
      "post": {
        "operationId": "TransSiswaPpdbController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransSiswaPpdbDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The PPDB student transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new PPDB student transaction",
        "tags": [
          "trans-siswa-ppdb"
        ]
      },
      "get": {
        "operationId": "TransSiswaPpdbController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idPpdbSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idPpdbKomponenBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB student transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB student transactions with pagination and filtering",
        "tags": [
          "trans-siswa-ppdb"
        ]
      }
    },
    "/api/trans-siswa-ppdb/generate-transaction-number": {
      "get": {
        "operationId": "TransSiswaPpdbController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "trans-siswa-ppdb"
        ]
      }
    },
    "/api/trans-siswa-ppdb/ppdb-siswa/{idPpdbSiswa}": {
      "get": {
        "operationId": "TransSiswaPpdbController_findByPpdbSiswa",
        "parameters": [
          {
            "name": "idPpdbSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaranPpd",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB transactions for the specified PPDB student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB transactions for a specific PPDB student",
        "tags": [
          "trans-siswa-ppdb"
        ]
      }
    },
    "/api/trans-siswa-ppdb/tahun-ajaran-ppd/{idTahunAjaranPpd}": {
      "get": {
        "operationId": "TransSiswaPpdbController_findByTahunAjaranPpd",
        "parameters": [
          {
            "name": "idTahunAjaranPpd",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all PPDB transactions for the specified PPDB academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all PPDB transactions for a specific PPDB academic year",
        "tags": [
          "trans-siswa-ppdb"
        ]
      }
    },
    "/api/trans-siswa-ppdb/{id}": {
      "get": {
        "operationId": "TransSiswaPpdbController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PPDB student transaction."
          },
          "404": {
            "description": "PPDB student transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a PPDB student transaction by id",
        "tags": [
          "trans-siswa-ppdb"
        ]
      },
      "patch": {
        "operationId": "TransSiswaPpdbController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransSiswaPpdbDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The PPDB student transaction has been successfully updated."
          },
          "404": {
            "description": "PPDB student transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a PPDB student transaction",
        "tags": [
          "trans-siswa-ppdb"
        ]
      },
      "delete": {
        "operationId": "TransSiswaPpdbController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PPDB student transaction has been successfully deleted."
          },
          "404": {
            "description": "PPDB student transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a PPDB student transaction",
        "tags": [
          "trans-siswa-ppdb"
        ]
      }
    },
    "/api/kas-siswa": {
      "post": {
        "operationId": "KasSiswaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKasSiswaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The student cash transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new student cash transaction",
        "tags": [
          "kas-siswa"
        ]
      },
      "get": {
        "operationId": "KasSiswaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all student cash transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all student cash transactions with pagination and filtering",
        "tags": [
          "kas-siswa"
        ]
      }
    },
    "/api/kas-siswa/generate-transaction-number": {
      "get": {
        "operationId": "KasSiswaController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "kas-siswa"
        ]
      }
    },
    "/api/kas-siswa/siswa/{idSiswa}": {
      "get": {
        "operationId": "KasSiswaController_findBySiswa",
        "parameters": [
          {
            "name": "idSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash transactions for the specified student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash transactions for a specific student",
        "tags": [
          "kas-siswa"
        ]
      }
    },
    "/api/kas-siswa/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "KasSiswaController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash transactions for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash transactions for a specific academic year",
        "tags": [
          "kas-siswa"
        ]
      }
    },
    "/api/kas-siswa/{id}": {
      "get": {
        "operationId": "KasSiswaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the student cash transaction."
          },
          "404": {
            "description": "Student cash transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a student cash transaction by id",
        "tags": [
          "kas-siswa"
        ]
      },
      "patch": {
        "operationId": "KasSiswaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKasSiswaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The student cash transaction has been successfully updated."
          },
          "404": {
            "description": "Student cash transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a student cash transaction",
        "tags": [
          "kas-siswa"
        ]
      },
      "delete": {
        "operationId": "KasSiswaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The student cash transaction has been successfully deleted."
          },
          "404": {
            "description": "Student cash transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a student cash transaction",
        "tags": [
          "kas-siswa"
        ]
      }
    },
    "/api/kas-spp": {
      "post": {
        "operationId": "KasSppController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKasSppDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The SPP transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new SPP transaction",
        "tags": [
          "kas-spp"
        ]
      },
      "get": {
        "operationId": "KasSppController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSppType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SPP transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SPP transactions with pagination and filtering",
        "tags": [
          "kas-spp"
        ]
      }
    },
    "/api/kas-spp/generate-transaction-number": {
      "get": {
        "operationId": "KasSppController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "kas-spp"
        ]
      }
    },
    "/api/kas-spp/siswa/{idSiswa}": {
      "get": {
        "operationId": "KasSppController_findBySiswa",
        "parameters": [
          {
            "name": "idSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SPP transactions for the specified student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SPP transactions for a specific student",
        "tags": [
          "kas-spp"
        ]
      }
    },
    "/api/kas-spp/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "KasSppController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SPP transactions for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SPP transactions for a specific academic year",
        "tags": [
          "kas-spp"
        ]
      }
    },
    "/api/kas-spp/{id}": {
      "get": {
        "operationId": "KasSppController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP transaction."
          },
          "404": {
            "description": "SPP transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a SPP transaction by id",
        "tags": [
          "kas-spp"
        ]
      },
      "patch": {
        "operationId": "KasSppController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKasSppDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The SPP transaction has been successfully updated."
          },
          "404": {
            "description": "SPP transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a SPP transaction",
        "tags": [
          "kas-spp"
        ]
      },
      "delete": {
        "operationId": "KasSppController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The SPP transaction has been successfully deleted."
          },
          "404": {
            "description": "SPP transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a SPP transaction",
        "tags": [
          "kas-spp"
        ]
      }
    },
    "/api/kas-uang-keluar": {
      "post": {
        "operationId": "KasUangKeluarController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKasUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The cash outflow transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new cash outflow transaction",
        "tags": [
          "kas-uang-keluar"
        ]
      },
      "get": {
        "operationId": "KasUangKeluarController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash outflow transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash outflow transactions with pagination and filtering",
        "tags": [
          "kas-uang-keluar"
        ]
      }
    },
    "/api/kas-uang-keluar/generate-transaction-number": {
      "get": {
        "operationId": "KasUangKeluarController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "kas-uang-keluar"
        ]
      }
    },
    "/api/kas-uang-keluar/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "KasUangKeluarController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash outflow transactions for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash outflow transactions for a specific academic year",
        "tags": [
          "kas-uang-keluar"
        ]
      }
    },
    "/api/kas-uang-keluar/{id}": {
      "get": {
        "operationId": "KasUangKeluarController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the cash outflow transaction."
          },
          "404": {
            "description": "Cash outflow transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a cash outflow transaction by id",
        "tags": [
          "kas-uang-keluar"
        ]
      },
      "patch": {
        "operationId": "KasUangKeluarController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKasUangKeluarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The cash outflow transaction has been successfully updated."
          },
          "404": {
            "description": "Cash outflow transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a cash outflow transaction",
        "tags": [
          "kas-uang-keluar"
        ]
      },
      "delete": {
        "operationId": "KasUangKeluarController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The cash outflow transaction has been successfully deleted."
          },
          "404": {
            "description": "Cash outflow transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a cash outflow transaction",
        "tags": [
          "kas-uang-keluar"
        ]
      }
    },
    "/api/kas-uang-masuk": {
      "post": {
        "operationId": "KasUangMasukController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKasUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The cash inflow transaction has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new cash inflow transaction",
        "tags": [
          "kas-uang-masuk"
        ]
      },
      "get": {
        "operationId": "KasUangMasukController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idListUangMasuk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash inflow transactions."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash inflow transactions with pagination and filtering",
        "tags": [
          "kas-uang-masuk"
        ]
      }
    },
    "/api/kas-uang-masuk/generate-transaction-number": {
      "get": {
        "operationId": "KasUangMasukController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "kas-uang-masuk"
        ]
      }
    },
    "/api/kas-uang-masuk/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "KasUangMasukController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash inflow transactions for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash inflow transactions for a specific academic year",
        "tags": [
          "kas-uang-masuk"
        ]
      }
    },
    "/api/kas-uang-masuk/list-uang-masuk/{idListUangMasuk}": {
      "get": {
        "operationId": "KasUangMasukController_findByListUangMasuk",
        "parameters": [
          {
            "name": "idListUangMasuk",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all cash inflow transactions for the specified income type."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all cash inflow transactions for a specific income type",
        "tags": [
          "kas-uang-masuk"
        ]
      }
    },
    "/api/kas-uang-masuk/{id}": {
      "get": {
        "operationId": "KasUangMasukController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the cash inflow transaction."
          },
          "404": {
            "description": "Cash inflow transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a cash inflow transaction by id",
        "tags": [
          "kas-uang-masuk"
        ]
      },
      "patch": {
        "operationId": "KasUangMasukController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKasUangMasukDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The cash inflow transaction has been successfully updated."
          },
          "404": {
            "description": "Cash inflow transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a cash inflow transaction",
        "tags": [
          "kas-uang-masuk"
        ]
      },
      "delete": {
        "operationId": "KasUangMasukController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The cash inflow transaction has been successfully deleted."
          },
          "404": {
            "description": "Cash inflow transaction not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a cash inflow transaction",
        "tags": [
          "kas-uang-masuk"
        ]
      }
    },
    "/api/cicilan-keuangan": {
      "post": {
        "operationId": "CicilanKeuanganController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCicilanKeuanganDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The installment payment has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new installment payment",
        "tags": [
          "cicilan-keuangan"
        ]
      },
      "get": {
        "operationId": "CicilanKeuanganController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idTahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "noTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tanggalTransaksi",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "cicilanKe",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all installment payments."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all installment payments with pagination and filtering",
        "tags": [
          "cicilan-keuangan"
        ]
      }
    },
    "/api/cicilan-keuangan/generate-transaction-number": {
      "get": {
        "operationId": "CicilanKeuanganController_generateTransactionNumber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a new transaction number."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate a new transaction number",
        "tags": [
          "cicilan-keuangan"
        ]
      }
    },
    "/api/cicilan-keuangan/siswa/{idSiswa}": {
      "get": {
        "operationId": "CicilanKeuanganController_findBySiswa",
        "parameters": [
          {
            "name": "idSiswa",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all installment payments for the specified student."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all installment payments for a specific student",
        "tags": [
          "cicilan-keuangan"
        ]
      }
    },
    "/api/cicilan-keuangan/tahun-ajaran/{idTahunAjaran}": {
      "get": {
        "operationId": "CicilanKeuanganController_findByTahunAjaran",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all installment payments for the specified academic year."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all installment payments for a specific academic year",
        "tags": [
          "cicilan-keuangan"
        ]
      }
    },
    "/api/cicilan-keuangan/{id}": {
      "get": {
        "operationId": "CicilanKeuanganController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the installment payment."
          },
          "404": {
            "description": "Installment payment not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get an installment payment by id",
        "tags": [
          "cicilan-keuangan"
        ]
      },
      "patch": {
        "operationId": "CicilanKeuanganController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCicilanKeuanganDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The installment payment has been successfully updated."
          },
          "404": {
            "description": "Installment payment not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update an installment payment",
        "tags": [
          "cicilan-keuangan"
        ]
      },
      "delete": {
        "operationId": "CicilanKeuanganController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The installment payment has been successfully deleted."
          },
          "404": {
            "description": "Installment payment not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete an installment payment",
        "tags": [
          "cicilan-keuangan"
        ]
      }
    },
    "/api/rep-balance-all": {
      "get": {
        "operationId": "RepBalanceAllController_getBalanceReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the overall balance report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get overall balance report",
        "tags": [
          "rep-balance-all"
        ]
      }
    },
    "/api/rep-balance-bln": {
      "get": {
        "operationId": "RepBalanceBlnController_getMonthlyBalanceReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "example": 2023,
              "type": "number"
            }
          },
          {
            "name": "month",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the monthly balance report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get monthly balance report",
        "tags": [
          "rep-balance-bln"
        ]
      }
    },
    "/api/rep-balance-hari": {
      "get": {
        "operationId": "RepBalanceHariController_getDailyBalanceReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-01-01",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the daily balance report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get daily balance report",
        "tags": [
          "rep-balance-hari"
        ]
      }
    },
    "/api/rep-balance-thn": {
      "get": {
        "operationId": "RepBalanceThnController_getYearlyBalanceReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "example": 2023,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the yearly balance report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get yearly balance report",
        "tags": [
          "rep-balance-thn"
        ]
      }
    },
    "/api/rep-penerimaan": {
      "get": {
        "operationId": "RepPenerimaanController_getIncomeReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the income report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get income report",
        "tags": [
          "rep-penerimaan"
        ]
      }
    },
    "/api/rep-penerimaan-harian": {
      "get": {
        "operationId": "RepPenerimaanHarianController_getDailyIncomeReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-01-01",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the daily income report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get daily income report",
        "tags": [
          "rep-penerimaan-harian"
        ]
      }
    },
    "/api/rep-spp-siswa": {
      "get": {
        "operationId": "RepSppSiswaController_getSppStudentReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSppType",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP student report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get SPP student report",
        "tags": [
          "rep-spp-siswa"
        ]
      }
    },
    "/api/rep-spp-siswa-bulan": {
      "get": {
        "operationId": "RepSppSiswaBulanController_getSppStudentMonthlyReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "example": 2023,
              "type": "number"
            }
          },
          {
            "name": "month",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSppType",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP student monthly report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get SPP student monthly report",
        "tags": [
          "rep-spp-siswa-bulan"
        ]
      }
    },
    "/api/rep-spp-siswa-harian": {
      "get": {
        "operationId": "RepSppSiswaHarianController_getSppStudentDailyReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSppType",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP student daily report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get SPP student daily report",
        "tags": [
          "rep-spp-siswa-harian"
        ]
      }
    },
    "/api/rep-spp-siswa-tahun": {
      "get": {
        "operationId": "RepSppSiswaTahunController_getSppStudentYearlyReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "example": 2023,
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSppType",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SPP student yearly report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get SPP student yearly report",
        "tags": [
          "rep-spp-siswa-tahun"
        ]
      }
    },
    "/api/rep-trans-siswa": {
      "get": {
        "operationId": "RepTransSiswaController_getStudentTransactionReport",
        "parameters": [
          {
            "name": "idTahunAjaran",
            "required": true,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idBiaya",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the student transaction report."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get student transaction report",
        "tags": [
          "rep-trans-siswa"
        ]
      }
    },
    "/api/ref-kelas": {
      "post": {
        "operationId": "RefKelasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefKelasDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The class has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new class",
        "tags": [
          "ref-kelas"
        ]
      },
      "get": {
        "operationId": "RefKelasController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all classes."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all classes with pagination and filtering",
        "tags": [
          "ref-kelas"
        ]
      }
    },
    "/api/ref-kelas/{id}": {
      "get": {
        "operationId": "RefKelasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the class."
          },
          "404": {
            "description": "Class not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a class by id",
        "tags": [
          "ref-kelas"
        ]
      },
      "patch": {
        "operationId": "RefKelasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefKelasDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The class has been successfully updated."
          },
          "404": {
            "description": "Class not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a class",
        "tags": [
          "ref-kelas"
        ]
      },
      "delete": {
        "operationId": "RefKelasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class has been successfully deleted."
          },
          "404": {
            "description": "Class not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a class",
        "tags": [
          "ref-kelas"
        ]
      }
    },
    "/api/mapping-kelas": {
      "post": {
        "operationId": "MappingKelasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMappingKelasDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The class mapping has been successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new class mapping",
        "tags": [
          "mapping-kelas"
        ]
      },
      "get": {
        "operationId": "MappingKelasController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "example": "10",
              "type": "string"
            }
          },
          {
            "name": "ruangKelas",
            "required": false,
            "in": "query",
            "schema": {
              "example": "A",
              "type": "string"
            }
          },
          {
            "name": "idKaryawan",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "idJur",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all class mappings."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all class mappings with pagination and filtering",
        "tags": [
          "mapping-kelas"
        ]
      }
    },
    "/api/mapping-kelas/{id}": {
      "get": {
        "operationId": "MappingKelasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the class mapping."
          },
          "404": {
            "description": "Class mapping not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a class mapping by id",
        "tags": [
          "mapping-kelas"
        ]
      },
      "patch": {
        "operationId": "MappingKelasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMappingKelasDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The class mapping has been successfully updated."
          },
          "404": {
            "description": "Class mapping not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a class mapping",
        "tags": [
          "mapping-kelas"
        ]
      },
      "delete": {
        "operationId": "MappingKelasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The class mapping has been successfully deleted."
          },
          "404": {
            "description": "Class mapping not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a class mapping",
        "tags": [
          "mapping-kelas"
        ]
      }
    },
    "/api/ref-smk": {
      "post": {
        "operationId": "RefSmkController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefSmkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The SMK has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefSmk"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new SMK",
        "tags": [
          "ref-smk"
        ]
      },
      "get": {
        "operationId": "RefSmkController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all SMKs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResultDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all SMKs with pagination and filtering",
        "tags": [
          "ref-smk"
        ]
      }
    },
    "/api/ref-smk/{id}": {
      "get": {
        "operationId": "RefSmkController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the SMK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefSmk"
                }
              }
            }
          },
          "404": {
            "description": "SMK not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a SMK by id",
        "tags": [
          "ref-smk"
        ]
      },
      "patch": {
        "operationId": "RefSmkController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefSmkDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The SMK has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefSmk"
                }
              }
            }
          },
          "404": {
            "description": "SMK not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a SMK",
        "tags": [
          "ref-smk"
        ]
      },
      "delete": {
        "operationId": "RefSmkController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The SMK has been successfully deleted."
          },
          "404": {
            "description": "SMK not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a SMK",
        "tags": [
          "ref-smk"
        ]
      }
    },
    "/api/ref-jur": {
      "post": {
        "operationId": "RefJurController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefJurDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The jurusan has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefJur"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new jurusan",
        "tags": [
          "ref-jur"
        ]
      },
      "get": {
        "operationId": "RefJurController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "namaJurusan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "info",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all jurusan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResultDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all jurusan with pagination and filtering",
        "tags": [
          "ref-jur"
        ]
      }
    },
    "/api/ref-jur/{id}": {
      "get": {
        "operationId": "RefJurController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the jurusan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefJur"
                }
              }
            }
          },
          "404": {
            "description": "Jurusan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a jurusan by id",
        "tags": [
          "ref-jur"
        ]
      },
      "patch": {
        "operationId": "RefJurController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefJurDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The jurusan has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefJur"
                }
              }
            }
          },
          "404": {
            "description": "Jurusan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a jurusan",
        "tags": [
          "ref-jur"
        ]
      },
      "delete": {
        "operationId": "RefJurController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The jurusan has been successfully deleted."
          },
          "404": {
            "description": "Jurusan not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a jurusan",
        "tags": [
          "ref-jur"
        ]
      }
    },
    "/api/ref-jenis-bayar": {
      "post": {
        "operationId": "RefJenisBayarController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefJenisBayarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The jenis bayar has been successfully created."
          }
        },
        "summary": "Create a new jenis bayar",
        "tags": [
          "ref-jenis-bayar"
        ]
      },
      "get": {
        "operationId": "RefJenisBayarController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "jenis",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keterangan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all jenis bayar."
          }
        },
        "summary": "Get all jenis bayar with pagination and filtering",
        "tags": [
          "ref-jenis-bayar"
        ]
      }
    },
    "/api/ref-jenis-bayar/{id}": {
      "get": {
        "operationId": "RefJenisBayarController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the jenis bayar."
          },
          "404": {
            "description": "Jenis bayar not found."
          }
        },
        "summary": "Get a jenis bayar by id",
        "tags": [
          "ref-jenis-bayar"
        ]
      },
      "patch": {
        "operationId": "RefJenisBayarController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefJenisBayarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The jenis bayar has been successfully updated."
          },
          "404": {
            "description": "Jenis bayar not found."
          }
        },
        "summary": "Update a jenis bayar",
        "tags": [
          "ref-jenis-bayar"
        ]
      },
      "delete": {
        "operationId": "RefJenisBayarController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The jenis bayar has been successfully deleted."
          },
          "404": {
            "description": "Jenis bayar not found."
          }
        },
        "summary": "Delete a jenis bayar",
        "tags": [
          "ref-jenis-bayar"
        ]
      }
    },
    "/api/ref-mapping-biaya-siswa": {
      "post": {
        "operationId": "RefMappingBiayaSiswaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefMappingBiayaSiswaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The mapping biaya siswa has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingBiayaSiswa"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new mapping biaya siswa",
        "tags": [
          "ref-mapping-biaya-siswa"
        ]
      },
      "get": {
        "operationId": "RefMappingBiayaSiswaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idPpdb",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idCoa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "jenisPembayaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all mapping biaya siswa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResultDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all mapping biaya siswa with pagination and filtering",
        "tags": [
          "ref-mapping-biaya-siswa"
        ]
      }
    },
    "/api/ref-mapping-biaya-siswa/{id}": {
      "get": {
        "operationId": "RefMappingBiayaSiswaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the mapping biaya siswa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingBiayaSiswa"
                }
              }
            }
          },
          "404": {
            "description": "Mapping biaya siswa not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a mapping biaya siswa by id",
        "tags": [
          "ref-mapping-biaya-siswa"
        ]
      },
      "patch": {
        "operationId": "RefMappingBiayaSiswaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefMappingBiayaSiswaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The mapping biaya siswa has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingBiayaSiswa"
                }
              }
            }
          },
          "404": {
            "description": "Mapping biaya siswa not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a mapping biaya siswa",
        "tags": [
          "ref-mapping-biaya-siswa"
        ]
      },
      "delete": {
        "operationId": "RefMappingBiayaSiswaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The mapping biaya siswa has been successfully deleted."
          },
          "404": {
            "description": "Mapping biaya siswa not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a mapping biaya siswa",
        "tags": [
          "ref-mapping-biaya-siswa"
        ]
      }
    },
    "/api/ref-mapping-cicilan-siswa": {
      "post": {
        "operationId": "RefMappingCicilanSiswaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefMappingCicilanSiswaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The mapping cicilan siswa has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingCicilanSiswa"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new mapping cicilan siswa",
        "tags": [
          "ref-mapping-cicilan-siswa"
        ]
      },
      "get": {
        "operationId": "RefMappingCicilanSiswaController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "idId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSiswa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idPpdb",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idCoa",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "jenisPembayaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tahunAjaran",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all mapping cicilan siswa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResultDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all mapping cicilan siswa with pagination and filtering",
        "tags": [
          "ref-mapping-cicilan-siswa"
        ]
      }
    },
    "/api/ref-mapping-cicilan-siswa/{id}": {
      "get": {
        "operationId": "RefMappingCicilanSiswaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the mapping cicilan siswa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingCicilanSiswa"
                }
              }
            }
          },
          "404": {
            "description": "Mapping cicilan siswa not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a mapping cicilan siswa by id",
        "tags": [
          "ref-mapping-cicilan-siswa"
        ]
      },
      "patch": {
        "operationId": "RefMappingCicilanSiswaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefMappingCicilanSiswaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The mapping cicilan siswa has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingCicilanSiswa"
                }
              }
            }
          },
          "404": {
            "description": "Mapping cicilan siswa not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a mapping cicilan siswa",
        "tags": [
          "ref-mapping-cicilan-siswa"
        ]
      },
      "delete": {
        "operationId": "RefMappingCicilanSiswaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The mapping cicilan siswa has been successfully deleted."
          },
          "404": {
            "description": "Mapping cicilan siswa not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a mapping cicilan siswa",
        "tags": [
          "ref-mapping-cicilan-siswa"
        ]
      }
    },
    "/api/ref-mapping-kelas": {
      "post": {
        "operationId": "RefMappingKelasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefMappingKelasDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The mapping kelas has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingKelas"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new mapping kelas",
        "tags": [
          "ref-mapping-kelas"
        ]
      },
      "get": {
        "operationId": "RefMappingKelasController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "kelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruangKelas",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idKaryawan",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idSmk",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "idJur",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all mapping kelas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResultDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all mapping kelas with pagination and filtering",
        "tags": [
          "ref-mapping-kelas"
        ]
      }
    },
    "/api/ref-mapping-kelas/{id}": {
      "get": {
        "operationId": "RefMappingKelasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the mapping kelas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingKelas"
                }
              }
            }
          },
          "404": {
            "description": "Mapping kelas not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a mapping kelas by id",
        "tags": [
          "ref-mapping-kelas"
        ]
      },
      "patch": {
        "operationId": "RefMappingKelasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefMappingKelasDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The mapping kelas has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefMappingKelas"
                }
              }
            }
          },
          "404": {
            "description": "Mapping kelas not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a mapping kelas",
        "tags": [
          "ref-mapping-kelas"
        ]
      },
      "delete": {
        "operationId": "RefMappingKelasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The mapping kelas has been successfully deleted."
          },
          "404": {
            "description": "Mapping kelas not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a mapping kelas",
        "tags": [
          "ref-mapping-kelas"
        ]
      }
    }
  },
  "info": {
    "title": "Finance API",
    "description": "The Finance API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "CreateRefUangKeluarDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UK001"
          },
          "deskripsi": {
            "type": "string",
            "example": "Pembayaran Listrik"
          }
        },
        "required": [
          "kodedesk",
          "deskripsi"
        ]
      },
      "UpdateRefUangKeluarDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UK001"
          },
          "deskripsi": {
            "type": "string",
            "example": "Pembayaran Listrik"
          }
        }
      },
      "CreateRefUangMasukDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UM001"
          },
          "deskripsi": {
            "type": "string",
            "example": "Pembayaran SPP"
          }
        },
        "required": [
          "kodedesk",
          "deskripsi"
        ]
      },
      "UpdateRefUangMasukDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UM001"
          },
          "deskripsi": {
            "type": "string",
            "example": "Pembayaran SPP"
          }
        }
      },
      "CreateRefSiswaDto": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "example": "John Doe"
          },
          "agama": {
            "type": "string",
            "example": "Islam"
          },
          "asalSekolah": {
            "type": "string",
            "example": "SMP Negeri 1"
          },
          "jenisKelamin": {
            "type": "string",
            "example": "L",
            "enum": [
              "L",
              "P"
            ]
          },
          "nisn": {
            "type": "string",
            "example": "12345678901"
          },
          "tempatLahir": {
            "type": "string",
            "example": "Jakarta"
          },
          "tanggalLahir": {
            "format": "date-time",
            "type": "string",
            "example": "2000-01-01"
          },
          "namaAyah": {
            "type": "string",
            "example": "John Doe Sr."
          },
          "pekerjaanAyah": {
            "type": "string",
            "example": "Karyawan Swasta"
          },
          "namaIbu": {
            "type": "string",
            "example": "Jane Doe"
          },
          "pekerjaanIbu": {
            "type": "string",
            "example": "Ibu Rumah Tangga"
          },
          "alamat": {
            "type": "string",
            "example": "Jl. Contoh No. 123"
          },
          "alamatWali": {
            "type": "string",
            "example": "Jl. Wali No. 456"
          },
          "teleponWali": {
            "type": "string",
            "example": "08123456789"
          },
          "namaWali": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idJur": {
            "type": "number",
            "example": 1
          },
          "idMappingKelas": {
            "type": "number",
            "example": 1
          },
          "idSppType": {
            "type": "number",
            "example": 1
          },
          "telepon": {
            "type": "string",
            "example": "08123456789"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "kelas": {
            "type": "number",
            "example": 10
          },
          "nis": {
            "type": "string",
            "example": "12345"
          },
          "idWaliKelas": {
            "type": "number",
            "example": 1
          },
          "synStatus": {
            "type": "string",
            "example": "Y"
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "idPpdb": {
            "type": "number",
            "example": 1
          },
          "noType": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "nama",
          "agama",
          "asalSekolah",
          "jenisKelamin",
          "nisn",
          "pekerjaanAyah",
          "pekerjaanIbu",
          "idSmk",
          "idJur",
          "idSppType",
          "tahunAjaran",
          "kelas",
          "status",
          "idPpdb",
          "noType"
        ]
      },
      "UpdateRefSiswaDto": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "example": "John Doe"
          },
          "agama": {
            "type": "string",
            "example": "Islam"
          },
          "asalSekolah": {
            "type": "string",
            "example": "SMP Negeri 1"
          },
          "jenisKelamin": {
            "type": "string",
            "example": "L",
            "enum": [
              "L",
              "P"
            ]
          },
          "nisn": {
            "type": "string",
            "example": "12345678901"
          },
          "tempatLahir": {
            "type": "string",
            "example": "Jakarta"
          },
          "tanggalLahir": {
            "format": "date-time",
            "type": "string",
            "example": "2000-01-01"
          },
          "namaAyah": {
            "type": "string",
            "example": "John Doe Sr."
          },
          "pekerjaanAyah": {
            "type": "string",
            "example": "Karyawan Swasta"
          },
          "namaIbu": {
            "type": "string",
            "example": "Jane Doe"
          },
          "pekerjaanIbu": {
            "type": "string",
            "example": "Ibu Rumah Tangga"
          },
          "alamat": {
            "type": "string",
            "example": "Jl. Contoh No. 123"
          },
          "alamatWali": {
            "type": "string",
            "example": "Jl. Wali No. 456"
          },
          "teleponWali": {
            "type": "string",
            "example": "08123456789"
          },
          "namaWali": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idJur": {
            "type": "number",
            "example": 1
          },
          "idMappingKelas": {
            "type": "number",
            "example": 1
          },
          "idSppType": {
            "type": "number",
            "example": 1
          },
          "telepon": {
            "type": "string",
            "example": "08123456789"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "kelas": {
            "type": "number",
            "example": 10
          },
          "nis": {
            "type": "string",
            "example": "12345"
          },
          "idWaliKelas": {
            "type": "number",
            "example": 1
          },
          "synStatus": {
            "type": "string",
            "example": "Y"
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "idPpdb": {
            "type": "number",
            "example": 1
          },
          "noType": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateTransSiswaDto": {
        "type": "object",
        "properties": {
          "noFaktur": {
            "type": "string",
            "example": "F-2023-001"
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "jenisPembayaran": {
            "type": "string",
            "example": "SPP"
          },
          "tanggalPembayaran": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "kelas": {
            "type": "string",
            "example": "10"
          },
          "idListBiaya": {
            "type": "string",
            "example": "B001"
          },
          "idRefListBiaya": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "string",
            "example": "LUNAS"
          },
          "kodedesk": {
            "type": "string",
            "example": "KD001"
          },
          "kodesub": {
            "type": "string",
            "example": "KS001"
          },
          "idWaliKelas": {
            "type": "number",
            "example": 1
          },
          "stsPpdb": {
            "type": "number",
            "example": 0
          },
          "cicilan": {
            "type": "number",
            "example": 0
          },
          "idJenisBayar": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "idSiswa",
          "idRefListBiaya",
          "stsPpdb",
          "cicilan",
          "idJenisBayar"
        ]
      },
      "UpdateTransSiswaDto": {
        "type": "object",
        "properties": {
          "noFaktur": {
            "type": "string",
            "example": "F-2023-001"
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "jenisPembayaran": {
            "type": "string",
            "example": "SPP"
          },
          "tanggalPembayaran": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "kelas": {
            "type": "string",
            "example": "10"
          },
          "idListBiaya": {
            "type": "string",
            "example": "B001"
          },
          "idRefListBiaya": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "string",
            "example": "LUNAS"
          },
          "kodedesk": {
            "type": "string",
            "example": "KD001"
          },
          "kodesub": {
            "type": "string",
            "example": "KS001"
          },
          "idWaliKelas": {
            "type": "number",
            "example": 1
          },
          "stsPpdb": {
            "type": "number",
            "example": 0
          },
          "cicilan": {
            "type": "number",
            "example": 0
          },
          "idJenisBayar": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateRefSppDto": {
        "type": "object",
        "properties": {
          "refName": {
            "type": "string",
            "example": "SPP Kelas 10"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "kodedesk": {
            "type": "string",
            "example": "SPP001"
          },
          "kodesub": {
            "type": "string",
            "example": "SUB001"
          }
        },
        "required": [
          "refName",
          "besarnya",
          "tahunAjaran"
        ]
      },
      "UpdateRefSppDto": {
        "type": "object",
        "properties": {
          "refName": {
            "type": "string",
            "example": "SPP Kelas 10"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "kodedesk": {
            "type": "string",
            "example": "SPP001"
          },
          "kodesub": {
            "type": "string",
            "example": "SUB001"
          }
        }
      },
      "CreateTransSppDto": {
        "type": "object",
        "properties": {
          "nis": {
            "type": "string",
            "example": "12345"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "bulan": {
            "type": "string",
            "example": "Januari"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "printStatus": {
            "type": "string",
            "example": "PRINTED"
          },
          "tanggalInput": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "noFaktur": {
            "type": "string",
            "example": "F-2023-001"
          },
          "kodedesk": {
            "type": "string",
            "example": "KD001"
          },
          "kodesub": {
            "type": "string",
            "example": "KS001"
          },
          "idSiswa": {
            "type": "string",
            "example": "1"
          },
          "idWaliKelas": {
            "type": "number",
            "example": 1
          },
          "stsPpdb": {
            "type": "number",
            "example": 0
          },
          "idJenisBayar": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "tahunAjaran",
          "tanggalTransaksi",
          "bulan",
          "besarnya",
          "idSiswa",
          "stsPpdb",
          "idJenisBayar"
        ]
      },
      "UpdateTransSppDto": {
        "type": "object",
        "properties": {
          "nis": {
            "type": "string",
            "example": "12345"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "bulan": {
            "type": "string",
            "example": "Januari"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "printStatus": {
            "type": "string",
            "example": "PRINTED"
          },
          "tanggalInput": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "noFaktur": {
            "type": "string",
            "example": "F-2023-001"
          },
          "kodedesk": {
            "type": "string",
            "example": "KD001"
          },
          "kodesub": {
            "type": "string",
            "example": "KS001"
          },
          "idSiswa": {
            "type": "string",
            "example": "1"
          },
          "idWaliKelas": {
            "type": "number",
            "example": 1
          },
          "stsPpdb": {
            "type": "number",
            "example": 0
          },
          "idJenisBayar": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateTransUangMasukDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UM001"
          },
          "kodesub": {
            "type": "string",
            "example": "SUB001"
          },
          "tanggaltransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "besarnya": {
            "type": "number",
            "example": 1000000
          },
          "diserahkan": {
            "type": "string",
            "example": "John Doe"
          },
          "diterima": {
            "type": "string",
            "example": "Jane Doe"
          },
          "keterangan": {
            "type": "string",
            "example": "Pembayaran SPP"
          },
          "tanggalinput": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "tahunajaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "no": {
            "type": "string",
            "example": "UM-2023-001"
          }
        },
        "required": [
          "tanggaltransaksi",
          "besarnya",
          "tahunajaran"
        ]
      },
      "UpdateTransUangMasukDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UM001"
          },
          "kodesub": {
            "type": "string",
            "example": "SUB001"
          },
          "tanggaltransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "besarnya": {
            "type": "number",
            "example": 1000000
          },
          "diserahkan": {
            "type": "string",
            "example": "John Doe"
          },
          "diterima": {
            "type": "string",
            "example": "Jane Doe"
          },
          "keterangan": {
            "type": "string",
            "example": "Pembayaran SPP"
          },
          "tanggalinput": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "tahunajaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "no": {
            "type": "string",
            "example": "UM-2023-001"
          }
        }
      },
      "CreateTransUangKeluarDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UK001"
          },
          "kodesub": {
            "type": "string",
            "example": "SUB001"
          },
          "tanggaltransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "besarnya": {
            "type": "number",
            "example": 1000000
          },
          "diserahkan": {
            "type": "string",
            "example": "John Doe"
          },
          "diterima": {
            "type": "string",
            "example": "Jane Doe"
          },
          "keterangan": {
            "type": "string",
            "example": "Pembayaran Listrik"
          },
          "tanggalinput": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "tahunajaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "no": {
            "type": "string",
            "example": "UK-2023-001"
          }
        },
        "required": [
          "tanggaltransaksi",
          "besarnya",
          "tahunajaran"
        ]
      },
      "UpdateTransUangKeluarDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UK001"
          },
          "kodesub": {
            "type": "string",
            "example": "SUB001"
          },
          "tanggaltransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "besarnya": {
            "type": "number",
            "example": 1000000
          },
          "diserahkan": {
            "type": "string",
            "example": "John Doe"
          },
          "diterima": {
            "type": "string",
            "example": "Jane Doe"
          },
          "keterangan": {
            "type": "string",
            "example": "Pembayaran Listrik"
          },
          "tanggalinput": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "tahunajaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "no": {
            "type": "string",
            "example": "UK-2023-001"
          }
        }
      },
      "CreateAdmRoleDto": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "example": "Admin"
          },
          "description": {
            "type": "string",
            "example": "Administrator role with full access"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "roleName"
        ]
      },
      "UpdateAdmRoleDto": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "example": "Admin"
          },
          "description": {
            "type": "string",
            "example": "Administrator role with full access"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateAdmRoleAssignmentDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "roleId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "userId",
          "roleId"
        ]
      },
      "UpdateAdmRoleAssignmentDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "roleId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateAdmConfigDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "app_name"
          },
          "value": {
            "type": "string",
            "example": "Finance App"
          },
          "description": {
            "type": "string",
            "example": "The name of the application"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "UpdateAdmConfigDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "app_name"
          },
          "value": {
            "type": "string",
            "example": "Finance App"
          },
          "description": {
            "type": "string",
            "example": "The name of the application"
          }
        }
      },
      "CreateAdmMenuDto": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dashboard"
          },
          "description": {
            "type": "string",
            "example": "Dashboard menu"
          },
          "url": {
            "type": "string",
            "example": "/dashboard"
          },
          "icon": {
            "type": "string",
            "example": "fa-dashboard"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "orderNo": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateAdmMenuDto": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dashboard"
          },
          "description": {
            "type": "string",
            "example": "Dashboard menu"
          },
          "url": {
            "type": "string",
            "example": "/dashboard"
          },
          "icon": {
            "type": "string",
            "example": "fa-dashboard"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "orderNo": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateAdmTahunAjaranDto": {
        "type": "object",
        "properties": {
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "description": {
            "type": "string",
            "example": "Tahun Ajaran 2023/2024"
          },
          "isActive": {
            "type": "boolean",
            "example": false
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "example": "2023-07-01"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "example": "2024-06-30"
          }
        },
        "required": [
          "tahunAjaran",
          "startDate",
          "endDate"
        ]
      },
      "UpdateAdmTahunAjaranDto": {
        "type": "object",
        "properties": {
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "description": {
            "type": "string",
            "example": "Tahun Ajaran 2023/2024"
          },
          "isActive": {
            "type": "boolean",
            "example": false
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "example": "2023-07-01"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "example": "2024-06-30"
          }
        }
      },
      "CreateAdmUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roleIds": {
            "example": [
              1,
              2
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "username",
          "password",
          "name"
        ]
      },
      "UpdateAdmUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roleIds": {
            "example": [
              1,
              2
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "type": "string",
            "example": "newpassword123"
          }
        }
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "currentpassword"
          },
          "newPassword": {
            "type": "string",
            "example": "newpassword123"
          },
          "confirmPassword": {
            "type": "string",
            "example": "newpassword123"
          }
        },
        "required": [
          "currentPassword",
          "newPassword",
          "confirmPassword"
        ]
      },
      "CreateRefBiayaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "SPP"
          },
          "description": {
            "type": "string",
            "example": "Biaya SPP bulanan"
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaran",
          "name",
          "amount"
        ]
      },
      "UpdateRefBiayaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "SPP"
          },
          "description": {
            "type": "string",
            "example": "Biaya SPP bulanan"
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateRefCicilanDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Cicilan 1"
          },
          "description": {
            "type": "string",
            "example": "Cicilan pertama untuk biaya SPP"
          },
          "amount": {
            "type": "number",
            "example": 250000
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "example": "2023-08-15"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaran",
          "idBiaya",
          "name",
          "amount"
        ]
      },
      "UpdateRefCicilanDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Cicilan 1"
          },
          "description": {
            "type": "string",
            "example": "Cicilan pertama untuk biaya SPP"
          },
          "amount": {
            "type": "number",
            "example": 250000
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "example": "2023-08-15"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateRefJabatanDto": {
        "type": "object",
        "properties": {
          "jabatan": {
            "type": "string",
            "example": "Kepala Sekolah"
          },
          "keterangan": {
            "type": "string",
            "example": "Jabatan untuk kepala sekolah"
          }
        },
        "required": [
          "jabatan"
        ]
      },
      "UpdateRefJabatanDto": {
        "type": "object",
        "properties": {
          "jabatan": {
            "type": "string",
            "example": "Kepala Sekolah"
          },
          "keterangan": {
            "type": "string",
            "example": "Jabatan untuk kepala sekolah"
          }
        }
      },
      "CreateRefKaryawanDto": {
        "type": "object",
        "properties": {
          "jabatan": {
            "type": "string",
            "example": "Manager"
          },
          "nik": {
            "type": "string",
            "example": "123456"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "type": "string",
            "example": "Jl. Contoh No. 123"
          },
          "phone": {
            "type": "string",
            "example": "08123456789"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateRefKaryawanDto": {
        "type": "object",
        "properties": {
          "jabatan": {
            "type": "string",
            "example": "Manager"
          },
          "nik": {
            "type": "string",
            "example": "123456"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "type": "string",
            "example": "Jl. Contoh No. 123"
          },
          "phone": {
            "type": "string",
            "example": "08123456789"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateRefListUangKeluarDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UK"
          },
          "kodesub": {
            "type": "string",
            "example": "001"
          },
          "daftarlist": {
            "type": "string",
            "example": "Gaji Karyawan"
          },
          "keterangan": {
            "type": "string",
            "example": "Pengeluaran untuk gaji karyawan"
          }
        },
        "required": [
          "kodedesk",
          "daftarlist"
        ]
      },
      "UpdateRefListUangKeluarDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UK"
          },
          "kodesub": {
            "type": "string",
            "example": "001"
          },
          "daftarlist": {
            "type": "string",
            "example": "Gaji Karyawan"
          },
          "keterangan": {
            "type": "string",
            "example": "Pengeluaran untuk gaji karyawan"
          }
        }
      },
      "CreateRefListUangMasukDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UM"
          },
          "kodesub": {
            "type": "number",
            "example": 1
          },
          "daftarlist": {
            "type": "string",
            "example": "Sumbangan"
          },
          "keterangan": {
            "type": "string",
            "example": "Pemasukan dari sumbangan"
          }
        },
        "required": [
          "kodedesk",
          "daftarlist"
        ]
      },
      "UpdateRefListUangMasukDto": {
        "type": "object",
        "properties": {
          "kodedesk": {
            "type": "string",
            "example": "UM"
          },
          "kodesub": {
            "type": "number",
            "example": 1
          },
          "daftarlist": {
            "type": "string",
            "example": "Sumbangan"
          },
          "keterangan": {
            "type": "string",
            "example": "Pemasukan dari sumbangan"
          }
        }
      },
      "CreateRefPrivilageDto": {
        "type": "object",
        "properties": {
          "idRole": {
            "type": "number",
            "example": 1
          },
          "idMenu": {
            "type": "number",
            "example": 1
          },
          "canRead": {
            "type": "boolean",
            "example": true
          },
          "canCreate": {
            "type": "boolean",
            "example": true
          },
          "canUpdate": {
            "type": "boolean",
            "example": true
          },
          "canDelete": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idRole",
          "idMenu"
        ]
      },
      "UpdateRefPrivilageDto": {
        "type": "object",
        "properties": {
          "idRole": {
            "type": "number",
            "example": 1
          },
          "idMenu": {
            "type": "number",
            "example": 1
          },
          "canRead": {
            "type": "boolean",
            "example": true
          },
          "canCreate": {
            "type": "boolean",
            "example": true
          },
          "canUpdate": {
            "type": "boolean",
            "example": true
          },
          "canDelete": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateRefSiswaKompBiayaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaran",
          "idSiswa",
          "idBiaya",
          "amount"
        ]
      },
      "UpdateRefSiswaKompBiayaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateRefSppTypeDto": {
        "type": "object",
        "properties": {
          "refName": {
            "type": "string",
            "example": "Bulanan"
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "typeDis": {
            "type": "number",
            "example": 1
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          }
        },
        "required": [
          "refName",
          "idSmk",
          "tahunAjaran",
          "typeDis",
          "besarnya"
        ]
      },
      "UpdateRefSppTypeDto": {
        "type": "object",
        "properties": {
          "refName": {
            "type": "string",
            "example": "Bulanan"
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "typeDis": {
            "type": "number",
            "example": 1
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          }
        }
      },
      "CreateRefTabsisDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaran",
          "idSiswa",
          "amount"
        ]
      },
      "UpdateRefTabsisDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateTransPengembalianDspDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "TRX-DSP-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pengembalian DSP untuk siswa John Doe"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        },
        "required": [
          "idTahunAjaran",
          "idSiswa",
          "noTransaksi",
          "tanggalTransaksi",
          "amount"
        ]
      },
      "UpdateTransPengembalianDspDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "TRX-DSP-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pengembalian DSP untuk siswa John Doe"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        }
      },
      "CreatePpdbSiswaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "nisn": {
            "type": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "example": "Jl. Contoh No. 123"
          },
          "phone": {
            "type": "string",
            "example": "08123456789"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaranPpd",
          "name"
        ]
      },
      "UpdatePpdbSiswaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "nisn": {
            "type": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "example": "Jl. Contoh No. 123"
          },
          "phone": {
            "type": "string",
            "example": "08123456789"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreatePpdbKomponenBiayaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Biaya Pendaftaran"
          },
          "description": {
            "type": "string",
            "example": "Biaya pendaftaran siswa baru"
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaranPpd",
          "name",
          "amount"
        ]
      },
      "UpdatePpdbKomponenBiayaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Biaya Pendaftaran"
          },
          "description": {
            "type": "string",
            "example": "Biaya pendaftaran siswa baru"
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreatePpdbKeuanganDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "idPpdbSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdbKomponenBiaya": {
            "type": "number",
            "example": 1
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "idTahunAjaranPpd",
          "idPpdbSiswa",
          "idPpdbKomponenBiaya",
          "amount"
        ]
      },
      "UpdatePpdbKeuanganDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "idPpdbSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdbKomponenBiaya": {
            "type": "number",
            "example": 1
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateTransSiswaPpdbDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "idPpdbSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdbKomponenBiaya": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "TRX-PPDB-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran biaya pendaftaran"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        },
        "required": [
          "idTahunAjaranPpd",
          "idPpdbSiswa",
          "noTransaksi",
          "tanggalTransaksi",
          "amount"
        ]
      },
      "UpdateTransSiswaPpdbDto": {
        "type": "object",
        "properties": {
          "idTahunAjaranPpd": {
            "type": "number",
            "example": 1
          },
          "idPpdbSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdbKomponenBiaya": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "TRX-PPDB-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran biaya pendaftaran"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        }
      },
      "CreateKasSiswaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "KAS-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran kas kelas"
          },
          "amount": {
            "type": "number",
            "example": 50000
          }
        },
        "required": [
          "idTahunAjaran",
          "idSiswa",
          "noTransaksi",
          "tanggalTransaksi",
          "amount"
        ]
      },
      "UpdateKasSiswaDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "KAS-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran kas kelas"
          },
          "amount": {
            "type": "number",
            "example": 50000
          }
        }
      },
      "CreateKasSppDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idSppType": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "SPP-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran SPP bulan Januari"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        },
        "required": [
          "idTahunAjaran",
          "idSiswa",
          "noTransaksi",
          "tanggalTransaksi",
          "amount"
        ]
      },
      "UpdateKasSppDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idSppType": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "SPP-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran SPP bulan Januari"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        }
      },
      "CreateKasUangKeluarDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "UK-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran kebutuhan sekolah"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        },
        "required": [
          "idTahunAjaran",
          "noTransaksi",
          "tanggalTransaksi",
          "amount"
        ]
      },
      "UpdateKasUangKeluarDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "UK-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran kebutuhan sekolah"
          },
          "amount": {
            "type": "number",
            "example": 500000
          }
        }
      },
      "CreateKasUangMasukDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idListUangMasuk": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "UM-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Penerimaan dana dari donatur"
          },
          "amount": {
            "type": "number",
            "example": 1000000
          }
        },
        "required": [
          "idTahunAjaran",
          "noTransaksi",
          "tanggalTransaksi",
          "amount"
        ]
      },
      "UpdateKasUangMasukDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idListUangMasuk": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "UM-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Penerimaan dana dari donatur"
          },
          "amount": {
            "type": "number",
            "example": 1000000
          }
        }
      },
      "CreateCicilanKeuanganDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "CK-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran cicilan DSP"
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "totalAmount": {
            "type": "number",
            "example": 5000000
          },
          "remainingAmount": {
            "type": "number",
            "example": 4500000
          },
          "cicilanKe": {
            "type": "number",
            "example": 1
          },
          "totalCicilan": {
            "type": "number",
            "example": 10
          }
        },
        "required": [
          "idTahunAjaran",
          "idSiswa",
          "noTransaksi",
          "tanggalTransaksi",
          "amount",
          "totalAmount",
          "remainingAmount",
          "cicilanKe",
          "totalCicilan"
        ]
      },
      "UpdateCicilanKeuanganDto": {
        "type": "object",
        "properties": {
          "idTahunAjaran": {
            "type": "number",
            "example": 1
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idBiaya": {
            "type": "number",
            "example": 1
          },
          "noTransaksi": {
            "type": "string",
            "example": "CK-20230101-001"
          },
          "tanggalTransaksi": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01"
          },
          "description": {
            "type": "string",
            "example": "Pembayaran cicilan DSP"
          },
          "amount": {
            "type": "number",
            "example": 500000
          },
          "totalAmount": {
            "type": "number",
            "example": 5000000
          },
          "remainingAmount": {
            "type": "number",
            "example": 4500000
          },
          "cicilanKe": {
            "type": "number",
            "example": 1
          },
          "totalCicilan": {
            "type": "number",
            "example": 10
          }
        }
      },
      "CreateRefKelasDto": {
        "type": "object",
        "properties": {
          "kelas": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "kelas",
          "idSmk"
        ]
      },
      "UpdateRefKelasDto": {
        "type": "object",
        "properties": {
          "kelas": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateMappingKelasDto": {
        "type": "object",
        "properties": {
          "kelas": {
            "type": "string",
            "example": "10"
          },
          "ruangKelas": {
            "type": "string",
            "example": "A"
          },
          "idKaryawan": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idJur": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "kelas",
          "ruangKelas",
          "idKaryawan",
          "idSmk",
          "idJur"
        ]
      },
      "UpdateMappingKelasDto": {
        "type": "object",
        "properties": {
          "kelas": {
            "type": "string",
            "example": "10"
          },
          "ruangKelas": {
            "type": "string",
            "example": "A"
          },
          "idKaryawan": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idJur": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateRefSmkDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "SMK Teknik"
          }
        },
        "required": [
          "name"
        ]
      },
      "RefSmk": {
        "type": "object",
        "properties": {}
      },
      "PaginatedResultDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateRefSmkDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "SMK Teknik"
          }
        }
      },
      "CreateRefJurDto": {
        "type": "object",
        "properties": {
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "namaJurusan": {
            "type": "string",
            "example": "Teknik Informatika"
          },
          "info": {
            "type": "string",
            "example": "Jurusan Teknik Informatika"
          }
        },
        "required": [
          "idSmk",
          "namaJurusan",
          "info"
        ]
      },
      "RefJur": {
        "type": "object",
        "properties": {}
      },
      "UpdateRefJurDto": {
        "type": "object",
        "properties": {
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "namaJurusan": {
            "type": "string",
            "example": "Teknik Informatika"
          },
          "info": {
            "type": "string",
            "example": "Jurusan Teknik Informatika"
          }
        }
      },
      "CreateRefJenisBayarDto": {
        "type": "object",
        "properties": {
          "jenis": {
            "type": "string",
            "example": "SPP"
          },
          "keterangan": {
            "type": "string",
            "example": "Pembayaran SPP Bulanan"
          },
          "flag": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "jenis",
          "keterangan",
          "flag"
        ]
      },
      "UpdateRefJenisBayarDto": {
        "type": "object",
        "properties": {
          "jenis": {
            "type": "string",
            "example": "SPP"
          },
          "keterangan": {
            "type": "string",
            "example": "Pembayaran SPP Bulanan"
          },
          "flag": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CreateRefMappingBiayaSiswaDto": {
        "type": "object",
        "properties": {
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdb": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idCoa": {
            "type": "number",
            "example": 1
          },
          "dicicil": {
            "type": "number",
            "example": 1
          },
          "danaOpsional": {
            "type": "number",
            "example": 0
          },
          "kelas": {
            "type": "number",
            "example": 1
          },
          "periode": {
            "type": "string",
            "example": "0"
          },
          "jenisPembayaran": {
            "type": "string",
            "example": "SPP Bulanan"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "stsDsp": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "idSiswa",
          "idPpdb",
          "idSmk",
          "idCoa",
          "dicicil",
          "danaOpsional",
          "kelas",
          "periode",
          "jenisPembayaran",
          "tahunAjaran",
          "besarnya",
          "status",
          "stsDsp"
        ]
      },
      "RefMappingBiayaSiswa": {
        "type": "object",
        "properties": {}
      },
      "UpdateRefMappingBiayaSiswaDto": {
        "type": "object",
        "properties": {
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdb": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idCoa": {
            "type": "number",
            "example": 1
          },
          "dicicil": {
            "type": "number",
            "example": 1
          },
          "danaOpsional": {
            "type": "number",
            "example": 0
          },
          "kelas": {
            "type": "number",
            "example": 1
          },
          "periode": {
            "type": "string",
            "example": "0"
          },
          "jenisPembayaran": {
            "type": "string",
            "example": "SPP Bulanan"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "stsDsp": {
            "type": "number",
            "example": 0
          }
        }
      },
      "CreateRefMappingCicilanSiswaDto": {
        "type": "object",
        "properties": {
          "idId": {
            "type": "string",
            "example": "CIC001"
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdb": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idCoa": {
            "type": "number",
            "example": 1
          },
          "kelas": {
            "type": "number",
            "example": 1
          },
          "jenisPembayaran": {
            "type": "string",
            "example": "SPP Bulanan"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "dibayarSekali": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "idId",
          "idSiswa",
          "idPpdb",
          "idSmk",
          "idCoa",
          "kelas",
          "jenisPembayaran",
          "tahunAjaran",
          "besarnya",
          "status",
          "dibayarSekali"
        ]
      },
      "RefMappingCicilanSiswa": {
        "type": "object",
        "properties": {}
      },
      "UpdateRefMappingCicilanSiswaDto": {
        "type": "object",
        "properties": {
          "idId": {
            "type": "string",
            "example": "CIC001"
          },
          "idSiswa": {
            "type": "number",
            "example": 1
          },
          "idPpdb": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idCoa": {
            "type": "number",
            "example": 1
          },
          "kelas": {
            "type": "number",
            "example": 1
          },
          "jenisPembayaran": {
            "type": "string",
            "example": "SPP Bulanan"
          },
          "tahunAjaran": {
            "type": "string",
            "example": "2023/2024"
          },
          "besarnya": {
            "type": "number",
            "example": 500000
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "dibayarSekali": {
            "type": "number",
            "example": 0
          }
        }
      },
      "CreateRefMappingKelasDto": {
        "type": "object",
        "properties": {
          "kelas": {
            "type": "string",
            "example": "X"
          },
          "ruangKelas": {
            "type": "string",
            "example": "A-101"
          },
          "idKaryawan": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idJur": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "kelas",
          "ruangKelas",
          "idKaryawan",
          "idSmk",
          "idJur"
        ]
      },
      "RefMappingKelas": {
        "type": "object",
        "properties": {}
      },
      "UpdateRefMappingKelasDto": {
        "type": "object",
        "properties": {
          "kelas": {
            "type": "string",
            "example": "X"
          },
          "ruangKelas": {
            "type": "string",
            "example": "A-101"
          },
          "idKaryawan": {
            "type": "number",
            "example": 1
          },
          "idSmk": {
            "type": "number",
            "example": 1
          },
          "idJur": {
            "type": "number",
            "example": 1
          }
        }
      }
    }
  }
}